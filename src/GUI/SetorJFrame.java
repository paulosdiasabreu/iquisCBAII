/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import dataBase.SalvarSetor;
import iquiscbaii.SetorJar;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Home
 */
public class SetorJFrame extends javax.swing.JFrame {

    SetorJar objSetor;

    /**
     * Creates new form SetorJFrame
     */
    public SetorJFrame() {
        initComponents();
        setLocationRelativeTo(null);
        /**
         * Este método seta o ícone da janela
         */
//        URL url = this.getClass().getResource("./img/dir16.png");
//        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
//        this.setIconImage(imagemTitulo);
        preencheTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        entradaSetor = new javax.swing.JTextField();
        jbtnSalvar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jspTable = new javax.swing.JScrollPane();
        jtbTabelaSetor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Setor");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Cadastro de Setor");

        jLabel2.setText("Setor: ");

        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setToolTipText("Clique para Salvar");
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.setToolTipText("Clique para Cancelar");

        jtbTabelaSetor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Setor"
            }
        ));
        jspTable.setViewportView(jtbTabelaSetor);
        if (jtbTabelaSetor.getColumnModel().getColumnCount() > 0) {
            jtbTabelaSetor.getColumnModel().getColumn(0).setMinWidth(60);
            jtbTabelaSetor.getColumnModel().getColumn(0).setPreferredWidth(65);
            jtbTabelaSetor.getColumnModel().getColumn(0).setMaxWidth(120);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnSalvar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(entradaSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)))
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entradaSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSalvar)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jspTable, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        // TODO add your handling code here:
        objSetor = new SetorJar();

        if (validarCampos()) {
            if (preencherObjeto()) {

                SalvarSetor DAO = new SalvarSetor();
                try {
                    DAO.salvar(objSetor);
                    JOptionPane.showMessageDialog(this, "Registro salvo com sucesso!");
                    DAO.getConexao().close();
                    limparCampos(); //limpar os campos após salvar no banco

                } catch (SQLException ex) {
                    Logger.getLogger(SetorJFrame.class.getName()).log(Level.SEVERE, null, ex);

                }

                limparCampos();
            }
        }


    }//GEN-LAST:event_jbtnSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetorJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField entradaSetor;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JScrollPane jspTable;
    private javax.swing.JTable jtbTabelaSetor;
    // End of variables declaration//GEN-END:variables

    private boolean preencherObjeto() {
        objSetor = new SetorJar();

        objSetor.setSetor(entradaSetor.getText());

        return true;
    }

    private boolean validarCampos() {

        if (entradaSetor.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Informe o Setor.");
            entradaSetor.requestFocus();
            return false;
        }

        return true;
    }

    private void limparCampos() {

        entradaSetor.setText(null);

    }

    private void preencheTabela() {
        SalvarSetor DAOConsulta = new SalvarSetor();
        SetorJar uni = new SetorJar();
        DefaultTableModel modeloTU = (DefaultTableModel) jtbTabelaSetor.getModel();

        try {
            List<SetorJar> todosSetores = DAOConsulta.ConsultaTudo();

            for (SetorJar setor : todosSetores) {
                modeloTU.addRow(new Object[]{setor.getIdSetor(), setor.getSetor()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(UnidadeJFrame.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

}
