/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ConsultaDB.ConsultaForn;
import dataBase.SalvarFornecedor;
import iquiscbaii.FornecedoresJar;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author home
 */
public class ConsultaFornecedor extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaFornecedor
     */
    public ConsultaFornecedor() {
        initComponents();
        //preencheTabela();

        setLocationRelativeTo(null);
//        URL url = this.getClass().getResource("./img/fornecedor.png");
//        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
//        this.setIconImage(imagemTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgConsulta = new javax.swing.ButtonGroup();
        jpPainel = new javax.swing.JPanel();
        jspScroll = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jpConsulta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jrbInscricao = new javax.swing.JRadioButton();
        jrbRazao = new javax.swing.JRadioButton();
        jrbFantasia = new javax.swing.JRadioButton();
        jtValor = new javax.swing.JTextField();
        jrbTodos = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jbConsultar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta - Fornecedores");
        setMinimumSize(new java.awt.Dimension(750, 540));

        jpPainel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta - Fornecedores", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Razão Social", "Nome Fantasia", "Inscrição", "Insc. Estadual", "Telefone", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspScroll.setViewportView(jtTabela);
        if (jtTabela.getColumnModel().getColumnCount() > 0) {
            jtTabela.getColumnModel().getColumn(0).setMinWidth(60);
            jtTabela.getColumnModel().getColumn(0).setPreferredWidth(70);
            jtTabela.getColumnModel().getColumn(0).setMaxWidth(120);
            jtTabela.getColumnModel().getColumn(1).setMinWidth(150);
            jtTabela.getColumnModel().getColumn(2).setMinWidth(120);
            jtTabela.getColumnModel().getColumn(3).setMinWidth(130);
            jtTabela.getColumnModel().getColumn(3).setPreferredWidth(150);
            jtTabela.getColumnModel().getColumn(3).setMaxWidth(170);
            jtTabela.getColumnModel().getColumn(4).setMinWidth(90);
            jtTabela.getColumnModel().getColumn(4).setPreferredWidth(100);
            jtTabela.getColumnModel().getColumn(4).setMaxWidth(150);
            jtTabela.getColumnModel().getColumn(5).setMinWidth(100);
            jtTabela.getColumnModel().getColumn(5).setPreferredWidth(120);
            jtTabela.getColumnModel().getColumn(5).setMaxWidth(160);
        }

        jpConsulta.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Tipo de consulta: ");

        btgConsulta.add(jrbInscricao);
        jrbInscricao.setText("Inscrição CPF/CNPJ");

        btgConsulta.add(jrbRazao);
        jrbRazao.setText("Razão Social");

        btgConsulta.add(jrbFantasia);
        jrbFantasia.setText("Nome Fantasia");

        btgConsulta.add(jrbTodos);
        jrbTodos.setSelected(true);
        jrbTodos.setText("Todos");

        jLabel2.setText("Valor: ");

        jbConsultar.setText("Consultar");
        jbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpConsultaLayout = new javax.swing.GroupLayout(jpConsulta);
        jpConsulta.setLayout(jpConsultaLayout);
        jpConsultaLayout.setHorizontalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpConsultaLayout.createSequentialGroup()
                        .addComponent(jrbInscricao)
                        .addGap(18, 18, 18)
                        .addComponent(jrbRazao)
                        .addGap(18, 18, 18)
                        .addComponent(jrbFantasia)
                        .addGap(18, 18, 18)
                        .addComponent(jrbTodos))
                    .addComponent(jtValor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jbConsultar)
                .addGap(18, 18, 18)
                .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpConsultaLayout.setVerticalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jrbInscricao)
                    .addComponent(jrbRazao)
                    .addComponent(jrbFantasia)
                    .addComponent(jrbTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jbConsultar)
                    .addComponent(jbLimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpPainelLayout = new javax.swing.GroupLayout(jpPainel);
        jpPainel.setLayout(jpPainelLayout);
        jpPainelLayout.setHorizontalGroup(
            jpPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jspScroll)
        );
        jpPainelLayout.setVerticalGroup(
            jpPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPainelLayout.createSequentialGroup()
                .addComponent(jpConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPainel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPainel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultarActionPerformed
        // TODO add your handling code here:
        if (validaCampos()) {
            limpaTabela();
            verificaConsulta();
        }
    }//GEN-LAST:event_jbConsultarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        jtValor.setText("");
        btgConsulta.clearSelection();
        limpaTabela();
    }//GEN-LAST:event_jbLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaFornecedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbConsultar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JPanel jpConsulta;
    private javax.swing.JPanel jpPainel;
    private javax.swing.JRadioButton jrbFantasia;
    private javax.swing.JRadioButton jrbInscricao;
    private javax.swing.JRadioButton jrbRazao;
    private javax.swing.JRadioButton jrbTodos;
    private javax.swing.JScrollPane jspScroll;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField jtValor;
    // End of variables declaration//GEN-END:variables

    private void preencheTabela() {
        SalvarFornecedor DAOConsulta = new SalvarFornecedor();
        FornecedoresJar uni = new FornecedoresJar();
        DefaultTableModel modeloTU = (DefaultTableModel) jtTabela.getModel();

        try {
            List<FornecedoresJar> todosFornecedores = DAOConsulta.consultaFornecedores();

            for (FornecedoresJar forn : todosFornecedores) {
                modeloTU.addRow(new Object[]{
                    forn.getIdFornecedores(),
                    forn.getRazaoSocial(),
                    forn.getNomeFantasia(),
                    forn.getInscricaoCpfCnpj(),
                    forn.getInscricaoEstadual(),
                    forn.getTelefone(),
                    forn.getEmail()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(UnidadeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void tabelaRazao() {
        ConsultaForn DAORazao = new ConsultaForn();
        FornecedoresJar tab = new FornecedoresJar();
        DefaultTableModel modeloTU = (DefaultTableModel) jtTabela.getModel();
        String razao = jtValor.getText();
        try {
            //DAORazao.consultaRazao(razao);
            List<FornecedoresJar> razaoFornecedores = DAORazao.consultaRazao(razao);
            for (FornecedoresJar forn : razaoFornecedores) {
                modeloTU.addRow(new Object[]{
                    forn.getIdFornecedores(),
                    forn.getRazaoSocial(),
                    forn.getNomeFantasia(),
                    forn.getInscricaoCpfCnpj(),
                    forn.getInscricaoEstadual(),
                    forn.getTelefone(),
                    forn.getEmail()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(UnidadeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void tabelaInscricao() {

        ConsultaForn DAORazao = new ConsultaForn();
        FornecedoresJar tab = new FornecedoresJar();
        DefaultTableModel modeloTU = (DefaultTableModel) jtTabela.getModel();
        String razao = jtValor.getText();
        try {
            //DAORazao.consultaRazao(razao);
            List<FornecedoresJar> inscricaoFornecedores = DAORazao.consultaInscricao(razao);
            for (FornecedoresJar forn : inscricaoFornecedores) {
                modeloTU.addRow(new Object[]{
                    forn.getIdFornecedores(),
                    forn.getRazaoSocial(),
                    forn.getNomeFantasia(),
                    forn.getInscricaoCpfCnpj(),
                    forn.getInscricaoEstadual(),
                    forn.getTelefone(),
                    forn.getEmail()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(UnidadeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void tabelaFantasia() {

        ConsultaForn DAORazao = new ConsultaForn();
        FornecedoresJar tab = new FornecedoresJar();
        DefaultTableModel modeloTU = (DefaultTableModel) jtTabela.getModel();
        String razao = jtValor.getText();
        try {
            //DAORazao.consultaRazao(razao);
            List<FornecedoresJar> fantasiaFornecedores = DAORazao.consultaFantasia(razao);
            for (FornecedoresJar forn : fantasiaFornecedores) {
                modeloTU.addRow(new Object[]{
                    forn.getIdFornecedores(),
                    forn.getRazaoSocial(),
                    forn.getNomeFantasia(),
                    forn.getInscricaoCpfCnpj(),
                    forn.getInscricaoEstadual(),
                    forn.getTelefone(),
                    forn.getEmail()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(UnidadeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void verificaConsulta() {
        if (jrbTodos.isSelected()) {
            preencheTabela();
        } else if (jrbRazao.isSelected()) {
            tabelaRazao();
        } else if (jrbInscricao.isSelected()) {
            tabelaInscricao();
        } else if (jrbFantasia.isSelected()) {
            tabelaFantasia();
        } else {
            JOptionPane.showMessageDialog(this, "Verifique Tipo de Consulta e Valor a ser pesquisado.");
        }
    }

    private void limpaTabela() {
        DefaultTableModel modeloTU = (DefaultTableModel) jtTabela.getModel();

//        if (modeloTU.getRowCount() > 0) {
            while (modeloTU.getRowCount() > 0) {
                modeloTU.removeRow(0);
                
            }

//        }

    }

    public boolean validaCampos() {
        if (!jrbTodos.isSelected() && !jrbRazao.isSelected() && !jrbInscricao.isSelected() && !jrbFantasia.isSelected()) {
            JOptionPane.showMessageDialog(this, "Selecione um tipo de consulta.");
            return false;
        }
        if (jrbRazao.isSelected() || jrbInscricao.isSelected() || jrbFantasia.isSelected()) {
            if (jtValor.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Informe um valor de pesquisa.");
                return false;
            }
        }
        return true;
    }

}
